----
I am building some parts of an  apple appstore like system
- homepage and review-n ratings for the product.
I am starting with the homepage module for which i should have basic api's like add product, list products , search for a product. 
Can you setup my homepage module for that ? Requirements :-
1. MongoDb for storing product details
2. Elastic Search for supporting search capabilities
3. FastAPI server with api implementations ( no authentication required ) for the admin Api - Add product and List Product and Search for a product 

----


----

I am using uv for dependencies. Getting elastic search connection issue while starting server. Fix that and do some api calls 
to ensure smooth working
----


----
Explain this search_products function.
----

----
What should flow look like when API request comes for adding a product i.e ideal way to use elastic search and mongoDb together ?
----

----
Okay, Now following similar project structure for product_reviews module ( proper separation of concern , classes and dependency injection for api, db and service layerr) , restructure my homepage module. 
Restructuring shouldn't affect core functionality and business logics
----

----
Can you please add unit test cases for service files in  homepage module ?. Important instructions to follow :- 
1. Ensure 100 % code coverage for the files being tested
2. U can safely mock database and any third party calls
3. Add required dependency like if using pytest in pyrpoject.toml file and add command to run tests with writing covergae report to html in readme file
----

----
Great, unit test cases are working as expected. Now, I want to write some integration test cases for testing happy flows in homepage module.  Things to consider
1.  Separate test env for integration testing ( config, databases )
2. Only write for success cases like successfull api calls - ( add product, update product , delete product, list products and search product ) 
3. Ensure any dummy or other data inserted during test cases run is cleared once test case is completed. 

Along with above instructions, follow best practices for writing integration test cases in python
----


----
Explain each function wth decorators used in conftest file.. 
----

----
Getting 500 for test cases because there is an event loop mismatch for ASGItransport created to send test api requests
and event loop used for managing database operations
----

----
I  think better to have separate env files for test / main application and  read that in config.py . Othwerise, main database 
would be messed up 
----